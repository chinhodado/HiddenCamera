<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAOjwAAAEAGABIKwAAFgAAACgAAAA6AAAAeAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AAA2mG8wm24um24rl28sk28okGkmkGckglsQUTYOSCsNRysLSC8KSCsNSC0QSS0QWDcMXToKXjkNbEYN
        b0cPcEkPcUYRcEUfgllInXt0tJN8uJV4tZN7t5d9uJl7tJR7tpV8uJZ7u5lexZc4r38zq30vqHwspngw
        p3oroXMooXIupnYupHk0qH42qHxdsopzsY97vZdqwpU6sYE4r4E6sIM5sYE8sYA3roA3roA4p3wAAC2e
        cyyacSmacSeYcCiVayaUaSWYbB+PaCOEXRJdNw5NLQpILApHLQ1ILA5FLAhYOAtxSRJ3SxFwSRFzSQ14
        TQt5UBuKWTWndzGmeUumgHq7mHy8lXy5lHy5lHi2lHy3lX+4l36/m2HJlzWvezWqdy6ndi2jci2hci2i
        ciefcC6sfC+kdTWndz2qfGGyi3SyjoHBm26/lUK1hT20hD+ygkGxgjmxfzqwfzmtezmtfQAAJ51xLZ9y
        KJlvKJdtKJZpKZpuIZBnI5duIpFnJ4xeEV9CDFAzDk00DUctDEgsCl04DXZKFXpNE3ZJC25EDnJLGIxb
        L6p6Nqx8M6p6M6l7Q6V/c7qVe7iYd7WWdbaPgLyWg76ZfbyYZMiXOLJ8MKp5M6l2J6NxJ6Z0IqFyIZ1v
        MKx6Lqt9LaF1NaV8XK6JdLCNf76XbsCTOq+BPK+DRK+DQLCCOayAMqN6Nqx9PLB/AAAomG8pm28um28m
        kWUom20glGkll2wmm28pmGwplmwliWEVYkIQUjIQSSwOTzEJXz0SeUkTeUsQdUwPcUcVf00wpnMyqHw2
        rX4yq3wwqHwyqHlFonp3u5N7vI97uJKDupiEvpl6vJpdxJU3s3w0qng1pHUxo3UzqHcqpnMlnGwsqXUz
        qnoupHUxn3dcrId3s41+vpVvxJM3soA3sH07roQ/r4A4qXs1qHo3q3w6q3sAACybcS+bcSeZbCiabSGR
        ZCegcySecCugby6dciebbyWUaiZ/VhJdNg9TMw5QMQtgOhF3Sg93UQx3TRWJWymkdyqgcy+mejGnfSyk
        eC6mdymidC6kdkiienm3kn20j323lH+8mX+/ml3CkjOtfyukdjKndy2peDSmdjKndyScbCqndC+seSil
        dDGjc1yrhXi1lH/AmGzBkDWwgDmtgTiufjWqezqvfzmufECwgkGxgQAAMJxyKJtwJ591JplvJ5tqKKBx
        KKJ2KqF1KqFxK6J1KZptJ5JkJoleE2U/DVg3C2M8FHlNFXpQG5BfLK58Lq17N6x7LaV2MKh8Mqh6Mqt6
        K6l6MKl5Mqd5UqZ/d7eTfbqXgryagb+VXcORNKp4LaN1KKB1JqRzMaNxMqB0I5xwK6x5KK15K6l6M6J0
        XrCJerOTfLuYaL+UOK1/N6p+Nal8Oat+Pa1+PK5/O6yDPq6FAAAsnG4up3MnonEppHgupngtpnoqnHAw
        nXQvnXEnnXAmmm4pnXQtn3Uni2AUZz4OaT4TeUselFwusXcwsHs2soA4soExrn4qpXQ0q3g5r30uq30t
        rX8zrno4q3tOp4N7t5qAuJh8upRXv5AzrXotpnYspnIrqHMsqXkuqHUsonM0rnosq3gsqHc2qXposo92
        spKBwZxkuZAolXAojmwlk24llm4nmHIplXAolnEuknEAADSldzKmeDSqeDaweTKqfDWsezmrdjGfbS+h
        cymhbiuldy2jdjCmdjGneS+SZBN7SyKbZDOwezm1fja1fjSygTW1hTeygjSxfTCoeDWsejaveS+tfDiv
        fDytfjmvgE6phHm3ln29llvBkjGpeiundiymdjOsejOqezGpdS6ldDOteyqrdS2sejarf2Gxi3SzkHu8
        lWS6ixSGWBeGWhSHWxaGWhKDWBWAWhaAWieGYQAAfMabf8ecd8aWeMaYesWbesmZgM+fcsaWbsGRc8GV
        csSWbcOXacCTar+Sbb6UXLqJR8GIN7V+O7WAOLWCObWDPLeEOLCANbJ9N699M6h3NLJ/MrKAO6+ANq57
        Nq5/NKZ9P5hzdruWW7qPNKp4MqZ2MqV1M6t6M6h5Mad4LKN0Lqp4Ma15M7F9Nq19YrCKerSSe76VZb2M
        EIZXEoVWFYZcFIVbEINZFXpWHYdkGYFbAACGw5+Dw56DxZyExp6KxqV8wJmCyqJ3wpuBwZ2Fx6F/w5t+
        wpyCw6CCwpyKyKJ/v5ltxJVQx5E8t4U1s384sX09tYAzsoA4soY4r4E7r345sIA3sIFAsX8yqnw3qn0x
        nnMunXQ9nXZMsYcyqHgupHMxp3YvqncyqHkwp3gponE2r3wvr3g0sXw8r4Bksox8tpSAwZhlvIwUiVwU
        g1gVhVgWg1sVgFojjWYVg1MQgFkAAH6/mH/AoIfDoIrEoojFnoPGn3/HnoTIoojFooPBm4TEnoLAooC/
        n4C9nH+9l37BmHi+lnHIoFLJkzezezWyeja0fTazgji2hT23hDyxgDmvfjirez2xgC+nfieZbyqdbSuf
        czKldiOUbC6gejCjdDGodTSpdjKody2hci6kdDivfjawfTqzf0O2g2Cyjny2lH/AlGK3ihOHXxCCVxGH
        WxWEWyWPZxeGWBCAUhJ+WAAAhMOce7+agL6dhcKcg8acgcmfgcmdhsqhgsWeeb2Vfb+ae72ZcrqUd7uY
        eL6Vdb2VesCac7yVbsmZScaNK7F9NLB/PbOEPLWDP7SCPa5+PK5+O6t7MZ11JI1lKJNnJppqL6J1K6V1
        H4xeEXdTK5txM6d4M6V1KqByK510MaNwOq59N7CBPLSDRbWBZrSPe7STgMCbYLuLE4pdF4taE4ZdI5Rp
        FodZDoJXEYRTF4BXAABYroVas4xhtY9et49esoxiu5FeuIxeuY1duI5YtYletYphtotat4tato5hu45f
        vZBgvJNVt4xWuItJvo0ps3kioGwhkmYgjGIgiGIdhF8ZgFobe1MaZkUXeVYlnnE0qHU5qnc1qXsklmQR
        eVAUdlQunXEuo3Eqo3UwoHctoG85r4A0sH86s4FEtIRqtI10so1+v5dYtoEXiFwYhF0nk2oYg1cTgVcS
        gloShVoahFsAACygcDOpejWnei6bbSuibyqgdDGmeC6nciyndDGoeDWqfzSrgDWtgDyufTerfjmvfjGs
        ey2qeDSsfDCqeiavfCaydx2cZg+BVw56Tg52ShNvRg9kPxRhPg1VORyDYi6nezGreTyseiSWahB5Ug5y
        RxN5UCmcbDCjcSuicCeddjStfDOzfDWzfj6zg2i1jXezjobDmVawfRaEWimUbRuKXRWIVxF/WRF/VRCD
        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
        m3AzqXoup3gxrHo1sXw6s4I6tYQ/toQ+toQ2sn81rn0zsH05sH46sHw5r3o6tII4s4I4tYA3tX88s4A2
        tIE0rn06rXsAABRhQApmQA9pQw9uQhJuQxFrQQ9wRSKLWmfBkIPGn4nKoXrKoDaqfjKrfjWseTStfzKr
        dzWpdx+IXRN/UA16SgxzSwt2Sw14SymfcCB/VRFVOAlSNQ1RLwlkPAx6ShN7ShFxRwxvRxF4Txl9VjCj
        czSrdTSueTqwfUG0gEO2g0e5h0C6gjy3hD60gTq1gzu0gTqyfjuyfDmyfjaxfzeyfTaxfDu0f0O3fzSw
        fTqsfAAAE1A0DlIyD1U1E1AvDkgrB1IsCWc7JIZYe8OTgsOdg8efe8ydO6x7Nqt6Oa99Na58Nat5L6x4
        Nat3IoxiEnlQD3VIDnlMC3dNKKByKqNyIIJdC1U1D1IzCmY/D3dLD3JED3VGDXpJC3ZPEX1SHIhaM6hz
        NbGCObKAP7R/QrWBQLWDPLqDOLaBPrh+MrWDPLmEM7aBObOCN7GBMq96MbB9NrWBObSAPrWBOa16QrN/
        AAAOOSQNOSEIOSAKOyQMSioNcEMhl2cznm52v4+IxqCFxZ2DzqM9rn88sn40s344s342rnYwrHczrno1
        q3wgh14ReFAOek0Qfk0jmWoqonEupHUlh2ENWjkLaD0OdEoMckoQf1EPf0sNeVAQfVERgFceiV40qnk3
        s4M7s4I+tX81sYA6toJAtoE+uIA8uYU7t4U5toA3toA5soI4sH03sIE6sn9Bs4JDsYJBsoI/soMAAAw7
        JQ09JAxAJAZDIhN1Qy2kcjivfkCufHfBlYbHn4fGnn/LoDqsfDeyfTqzgD20fzSsdS6pczCsdyqpdTCq
        eh2JWw57TA+AUSmmcyyndC+lczGoeCiNZQpjPwt3TROCUxOCVA59ThB6UROAURGEVhSGWB2KWzqjeD2v
        gkC0h0a3hk65hk+3hE+3iEi3h022iEu3hUq2hkm2iEOzh0y0hUevhk2yhlG0iE+2iFK3kQAAC0YqCU8v
        ClYxEnZKJZpoNLF7PbWAQa99dMOQgsiZicuhhM6hOa9+NrGANrJ9M7J9Lqt2KaZzK6d2Lah5LKl3LKd5
        HYtgFIBPKqZwMa55L6p4Max7KKNzHZRnKat2La93LKt4K6h0L6Z3Mql1MKp4NbB/Na99Va2BesGZfsig
        gMifhc6igseciMafiMmhhMufhMmahcedgsWeg8aghMieh8mihMabgsSag8SYgr+XAAAKSyoHXDMReU0r
        oXItqHUwrng3sn45rnpwwJKDzKSDzZ2E0aYzp3gurXwzr34zrHstpnQmom8tqnsvr30yqnotqXcwrXsd
        kGIpp3QvtYIxsH42rXonp3opqn8tqnkzsoEytH4wr3oyrXk2rnc4sns7tII0toE8sX5bqICDu5eDwpiF
        wJiDwJmAvJWHwZqDwpiEwpiFv5uBv5mCwZd/vpOCvph/upOGwJyBvJOFu5gAAAlYLQ50RiecbS6nczGs
        eiqndCypdjOpeHjImobQpIbRoILUpC6ody+uezGxejGueSykci+ldC2tfC2sejGueDKvey6xfDSoeEuy
        hDi2gDKyfTKxezO1gDCueDKtfS6seTK0fjKyfzKyfzKwfDWtfDewfziyfjOyezWweVunfoK6l4PAl4LC
        loW/mH+9moHClIK/loW+n4W+noO7loK+l366mH29k327k3u3lH+4lQAAGn5WJ5BiJ51sK6d2LKp2LKZ1
        LqZ2NKJvds2XhtSggtCeg9KnMql5MK57NbB4Lap0K6p4K6l1MrB8Ma58L694Lq13NrB6Rap6fsudVruN
        MrN+OLuDPLh/OrJ3OrJ+M7F/MbF8NrF8MrB5MbB5OLJ+MLB8MbJ/NbN+M7B6O7SAVqN5b7WIa7eJbLqK
        bLeJbcCLZLeFXq+DZ7WLYrKFY7OIW7CHXLOGWrOCX7iIW7KEAAAzpHcqmW0nn3Imo28opXAqom8voG00
        pGxzzZWE06GG1aN+0qY2q3sxr30urHYtrnorqnwtr3szs3w3sXwyr3ktrHk1sXxDq3d7yJSC1aNXw5M5
        uoM8uoMztnk1tXo6sn8zsX0uq3Yyr3g2r3o2s380sXw0sX84tIE8tH81rHUYgE4bdE45n3E/rH85rHo1
        rXospnYwp3w1qXc0q3o5rn03rn83r302sX45soA+r4EAADqpfCimdSihcSihdSGYaSqgbSebaDejbnjG
        lIbMo4XPoX3RpTqwfi+weC6xdzS2fzWwfjKwfTW3gTSzezKyey+wejWzfT+qd3bGlYXQnnvOnFDBjTy9
        hjW2fDe3fTizfTezfjGxfS+qeTeyfDSyfTexezy0ezy2fziteBaKWxV5TQxePBp1TDWmbzaweTmyfzKu
        ezGvfjuxfDOrezSufTOzgDezgDqvfkS0gUOyfgAARL+KLK59Kqh2JqN3KqJ1KJxrKZ1sOaZzecWVhcie
        hc6gftWpNrB+LrB4LrWAMbR+MrR9MK16L7N+MLB8MrJ6L65+M657QKd4fsWbisyghs2egs+jV8GQPrmC
        ObqAM7R8N7R9M7F8OLN7M6x2OLKAOrF8ObB8M6pzFItdEYVYE3VLCVk5C1w5F3RKKptqN7J/NLSDOLZ+
        OrN+PbOCPLB+O7OAPbSDO7SBRrmDRLaDAABHwIgwsX0tr3wqqX0qn3ItoHEronA5qHJ6x5eBxZuDy519
        z6MwqHYysn0xtn4xsnoysXsxr3Yxs340sXw1snwxrnsurXhBqXp/wpqBxJyMz6KCzJp+zaBSwI84uYM3
        uIMztH4vrnstqncurXovqnkxq3kyp3Iah1kYhlgShFQUcksKVzQMVjMNUTESaUY3p3U3s4A4t4U0s4A2
        tX84tYI5sYM9toM/t4JFt4REt4YAAEO/jDGxfS2wfy6pdy+odS6kcy2ndTamc3jDmYHGmYXMmn7Onjal
        dzSyfzW2gDSyfTGwejOwdjOxezexdy6qdyypdjawej6ndn7El4LJnInQpYHLm43VpHrMnVLCkz+8iDu7
        gje2gzKwgja0eDSxeS6kbBWCUxWEWBaHWBiJVhh1SwxUMgpPLgpRMAVPMBlxSzaldzq1fzi1gDKyfzay
        gT2yhD61gDe0eDu0fj20gwAAQ8CMMbF9KaR2K6JyMax7L6h2LqV2OaV1e8WahMqcgcuaf8yhOql5Nq53
        QLd+OrF+NLJ8Lq11M7F6MKl1JKV0JqZ5LaZ2OKJyesKWgsudh9CkitKii9Kfhsugg8yhVsGNQbyDPriF
        ObGEOrJ+Mq10F4JSEXxND4JSGIdWF4lVFnVMDFAxC1EvDlUyC1ItC1cyFnFMNaRxN7F6NrJ6ObF/Nqx9
        Q7WCPLB+PK9/PrCFAABLwIsupXUpqngrrHkurXwtq3kuqXw0o3V9xpmFyJ6DzZ5+0KM0qHcyrncysHcz
        rXMzrXgwrHctr3YopnQpq3csqncsqXYwoW90wZSAzZ2Fz5+FzJ+I0Z2I0KGJy6B8y5tfw5JCvIM+toM1
        q3cXiVkQf1IRf1MMfVERhlcSh1cQbUcIUzMIVDMLUzUQUzMMVDELVzcWbkcyonU2rno4r3s4sH0+toRC
        toE8r4E9tIgAAEm2hjKpeSmsdTCzejOveTeuezKmcjOib3nFkYfKo4HJnX/MmzeodzCqeDKteiqkcjGo
        dCujbyylcyyoeSypdTOtdi6sdjajcnW+kobPnovRo4fMoYfNoIrPpIrLoIbLn4PPn1S/hziudx6NXBaH
        WBKDVRaFWxmAWQ96TBF7TRFsSQxaOgxaNwpVMgtQLgpRLgpSNA1SMhl6VzmvgjewezWtfj21g0S3fz6z
        fTysewAAO7F9LaV2JaJuJ6l2J6l0J6VvJphpMp1pc8WVh8qmhMuifcuhNaFxLKV0KaVwK6NyLJptIpNk
        KJ5uKqJxLaVzL6V0LqRzM5xwdL6VhM2lg86ihNChgsyihM2iiMyfhsyig8+afdCeW7WIWq6HWa6BVq2F
        S6d8VKx/Rp5zP5loO5FhE2A9E2VDEFw+ElU3Dlc1D1c5Dk0xJn1fQKh7RrCBPqh+QayBPqt+N6uAQKqE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>